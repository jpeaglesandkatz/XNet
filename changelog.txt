1.21-7.0.2:
- Fixed a problem with item filters being discarded when the controller is broken or when the game is saved

1.21-7.0.1:
- Fixed a crash bug in the gui of the connector

1.21-7.0.0:
- Port to 1.21

1.20-6.1.6:
- Dertiende fixed a bug in the copy of the fluid connector

1.20-6.1.5:
- Dertiende implemented a new 'pulse' mode for redstone channels. This will let the connector output a pulse with the specified duration

1.20-6.1.4:
- Dertiende did another small refactor of redstone and color logic
- Fixed a problem where a facade could mimic air in some situations

1.20-6.1.3:
- Dertiende fixed redstone logic

1.20-6.1.2:
- Dertiende fixed a crash with XNet in combination with some other mods

1.20-6.1.1:
- Various changes and improvements from Dertiende:
    - Ticking optimisation, caching of main variables
    - Added support for jei drag&drop
    - Fixed some translations for .ru
    - Fixed problem with logical channel when it didn't work with redstone dust connected
    - Fixed crash when working with StorageScanner from RFTools
    - Fixed crash when energy channel connector breaks

1.20-6.1.0:
- Dertiende did some massive changes to XNet:
    - More text labels can now be localized
    - Add support of all logic operations from enderio
    - Remove "speed" from logic channel
    - Changes in input validation: the text is now validated when you lose focus and when you press enter or esc. Previously, every new character was validated
    - Fixed bug with connector GUI. Connector name is now correctly displayed when reconnecting for other players as well
    - Now in connector GUI you can see connected block for each direction (also info about block when hovered)
    - Directional name toggle buttons now do not lose state after reopening the connector GUI
    - (Speed up) Combining simulation and real insertion methods for item and fluid channels
    - (Speed up) Cache connector position for all channels
    - (Speed up) Skip processing of full inventories if there are many extractors for item channels
    - (Speed up) Cache rate for energy channel
    - (Speed up) Stop the iteration if we have obtained enough energy to fill all consumers for energy channel

1.20-6.0.2:
- Fixed shape calculation for connectors so that they are more accurate
- Fixed patchouli integration

1.20-6.0.1:
- Fixed a bug with rendering (cable outlines)

1.20-6.0.0:
- Port to 1.20

1.19-5.1.4:
- Update to 1.19.4

1.19-5.1.3:
- Fixed a problem with fluid filters which would cause crashes if it wasn't a valid bucket item to filter on
- Pasting to an advanced connector with a direction different from default would not correctly set that direction

1.19-5.1.2:
- Big improvements to the routing and wireless routing in general. It should now start and stop much quicker if something changes and it will also respect the fact that a channel is disabled

1.19-5.1.1:
- Added facade to the creative tab
- Fixed a server-side crash with facades on 1.19.3. Make sure to update McJtyLib too

1.19-5.1.0:
- Updated to Latest McJtyLib and made compatible with 1.19.3

1.19-5.0.2:
- Bugfix by StevenDoesStuffs so that the filter on fluid extraction works again

1.19-5.0.1:
- You can again change the side of an advanced connector (in the gui)

1.19-5.0.0:
- Port to 1.19

1.18-4.0.5:
- Port to 1.18.2

1.18-4.0.4:
- Copy/paste will now use a more compact json so that more can be copied before hitting the limit
- New system to automatically split the copy/paste packet from client to server in case of huge networks. Can be disabled by setting the client config controllerMaxPaste to a value like 28000

1.18-4.0.3:
- Fixed a problem with items not getting restored when breaking and placing blocks

1.18-4.0.2:
- Fixed a problem with XNet networks not working below 0. Networks should be automatically upgraded to being below 0 compatible

1.18-4.0.1:
- Updates for McJtyLib and fixes

1.18-4.0.0:
- First release of XNet for 1.18

1.16-3.0.15:
- Updated to latest version of McJtyLib

1.16-3.0.14:
- Updated to latest version of McJtyLib

1.16-3.0.13:
- XNet cables and connectors can now be waterlogged and cables no longer break in water

1.16-3.0.12:
- Fix the item model for the yellow connector

1.16-3.0.11:
- Fixed the recipe for the connector upgrade

1.16-3.0.10:
- Fixed cables in creative tab
- Added back support for the XNet api
- Fixed a potential crash in facades
- Wireless router works again
- Disabling a connector will now immediatelly cause a visual update
- Fixed recipes and added recipe for connector upgrade kit
- The connector upgrade kit works again

1.16-3.0.9:
- Fixed a potential crash when placing a connector next to a hopper

1.16-3.0.8:
- Clipboard support in the controller is working again

1.16-3.0.7:
- Update to latest McJtyLib

1.16-3.0.6-beta:
- Fixed a problem on servers

1.16-3.0.5-beta:
- Accidentally removed the required tags

1.16-3.0.4-beta:
- Update to latest McJtyLib

3.0.3-beta:
- Fixed a problem on servers

3.0.2-beta:
- Safer client-side registrations (thread-safety)
- Various cleanups and fixes

3.0.1-beta:
- Fixed a potential exploit which could be used to attack a server

3.0.0-beta:
- First port to 1.16.2

2.1.8:
- Fixed a potential exploit which could be used to attack a server

2.1.7-beta:
- Update for latest McJtyLib

2.1.6-beta:
- Update for latest McJtyLib

2.1.5-beta:
- Kyle Edwards changed facade blocks to copy mimic block from other facade blocks
- Kyle Edwards fixed rendering of damaged cables

2.1.4-beta:
- Fixed the item model for XNet facades
- Kyle Edwards fixed various things related to the facades:
    - Fixed some rendering issues when breaking facades
    - Fixed the cable blocks being solid
    - Consolidate all cable/facade rendering into GenericCableBakedModel and remove the redundant FacadeBakedModel and everything related to it. This reduces the amount of code that has to be maintained.
    - Fix a possible performance regression in #414 that was pointed out on Discord. Now, the cable quads only get returned in the solid rendering layer, and quads for the mimicked block only get returned if the mimicked block's canRenderInLayer() is true.
    - Allow facade/cable rendering in all layers, ensuring that translucency works in addition to cutouts and solids.
    - Always render the cable even if there is also a facade, so that translucent and cutout blocks show the cable inside.

2.1.3-beta:
- Fixed some recipes so they work with any chest instead of only vanilla chests

2.1.2-beta:
- AKAStacks fixed a problem with breaking facades causing the network to unlink

2.1.1-beta:
- Dependency fix

2.1.0-beta:
- Fixed antenna models
- Re-implemented TOP support for all XNet cables/connectors and machines
- Used new tooltip system in McJtyLib
- The oredictionary support in XNet has been replaced with the use of tags. If you enable 'tag matching' it tries to find common tags to match on
- XNet now also supports the filter module from RFToolsBase. Up to 4 filters can be placed in the controller and used in item connectors
- The processor console module can now also be used as an item in the tablet
- Fixed the recipes for the vanilla recipe book
- Moved most of the configs from common to server (so that they are saved with the world and synced to the client)

2.0.2-alpha:
- Darkere fixed some GUI translation keys
- 'kr' translation file from Mindy
- Fixed the models for the router and wireless router
- Fixed various cable models

2.0.1-alpha:
- Fixed proper dependency reporting in case McJtyLib or RFToolsBase are missing

1.8.7:
- Inventory hilighting from the controller works again
- The facade block works much better now
- Connectors now connect better (visually) when they are first placed

1.8.6:
- Updates to latest McJtyLib
- The drops for cables, connectors and advanced connectors should now be correct
- The xnet cables and connectors should no longer appear in all creative tabs

1.8.5:
- Fixed localized names for the colored cables, connectors, and advanced connectors
- Fixed a problem in the controller where the current amount of power would not be shown correctly

1.8.4:
- Fixed class loading problem on servers
- Improved crafting recipes for cables, connectors and advanced connectors by using tags

1.8.3:
- First port to 1.14

1.8.2:
- Joseph fixed a pathological case with fluid handling

1.8.1:
- The ctrl-c/ctrl-v hotkeys work on connectors now instead of channels
- The up/down keys move up/down the selected connector

1.8.0:
- Depends on McJtyLib 3.5.0!
- Fixed a problem where the updated proxy would break instantly by hand and not drop anything
- Added ctrl-c/ctrl-v support for copy/pasting channels
- Added support for RFTools Control with a new opcode to enable/disable channels
- Added another opcode to test if a color mask is true
- Added better checks when inserting fluids in a tank to make sure it really worked. This avoids a crash in certain situations

1.7.6:
- API improvements to allow other mods to add connectors to a controller
- Needs McJtyLib 3.1.0
- Support for COFH RF API is removed. Only Forge Energy is supported now
- Various cleanups

1.7.5:
- Fixed a bug with wireless channels not storing the owner correctly
- New feature to copy/paste channels and connectors!

1.7.4:
- WARNING: Do not load any worlds with XNet 1.7.3 or earlier if you last saved them with XNet 1.7.4 or later!
- Joseph fixed log warnings due to tile entities being registered with names like "minecraft:xnet_facade" instead of "xnet:facade".
- Fixed a problem with the redstone proxy blocks being breakable by hand (and not giving any drops)
- Fixed a possible crash with the wireless routers when used in different (unloaded) dimensions
- Made sure that the baked models for cables never return null for the particle texture
- Fixed a problem with the router not showing multiple local channels of the same type

1.7.3:
- Fixed a few baked models that didn't test for null state. This fixes XNet for recent versions of Forge

1.7.2:
- Fixed a very stupid bug in the item handling when there were multiple extraction points and some of these were disabled by color mask and/or redstone mode. As soon as it tested one of those extraction points it would ignore all remaining extraction points if the conditions didn't match

1.7.1:
- Reduced power consumption of the wireless router. It was a bit too much. Changed the name of the config so that everyone will get the new values
- New feature to extract a specific amount of items per tick

1.7.0:
- Made compatible with the latest McJtyLib (3.0.0)
- New wireless router. A wireless router must be connected to a routing network (using the special routing cables) to a normal router. All published channels on that router will be made available remotely to another wireless router. Note that a wireless router needs an antenna to work

1.7.0alpha:
- Made compatible with the latest McJtyLib (3.0.0)
- New wireless router. A wireless router must be connected to a routing network (using the special routing cables) to a normal router. All published channels on that router will be made available remotely to another wireless router. Note that a wireless router needs an antenna to work
